$date
	Thu Mar  3 17:27:03 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ms
$end
$scope module alu_tb $end
$var wire 1 ! alu_z $end
$var wire 16 " alu_out [15:0] $end
$var reg 16 # alu_in_a [15:0] $end
$var reg 16 $ alu_in_b [15:0] $end
$var reg 2 % alu_op [1:0] $end
$var reg 1 & alu_operar $end
$scope module ALU_1 $end
$var wire 16 ' in_a [15:0] $end
$var wire 16 ( in_b [15:0] $end
$var wire 2 ) op [1:0] $end
$var wire 1 & operar $end
$var reg 1 * n $end
$var reg 16 + out [15:0] $end
$var reg 1 , v $end
$var reg 1 ! z $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x,
b1111 +
x*
b0 )
b101 (
b1010 '
1&
b0 %
b101 $
b1010 #
b1111 "
0!
$end
#1000
b101 "
b101 +
b1 %
b1 )
#2000
b10 %
b10 )
#3000
1!
b0 "
b0 +
b11 %
b11 )
#4000
0!
b1111111111111011 "
b1111111111111011 +
b0 %
b0 )
b1111111111110110 #
b1111111111110110 '
#5000
b1111111111110001 "
b1111111111110001 +
b1 %
b1 )
#6000
b1111111111111011 "
b1111111111111011 +
b10 %
b10 )
#7000
b100 "
b100 +
b11 %
b11 )
#8000
b101 "
b101 +
0&
#9000
b0 %
b0 )
#10000
b1 %
b1 )
#11000
b10 %
b10 )
#13000
